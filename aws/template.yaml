AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'Subscriber Migration Portal - VPC with Aurora Serverless v1 (version fallback)'

Parameters:
  Stage:
    Type: String
    Default: 'prod'
    AllowedValues: ['dev','test','prod']
  CorsOrigins:
    Type: String
    Default: 'https://yourdomain.com'
  JwtSecret:
    Type: String
    NoEcho: true
  BucketSuffix:
    Type: String
    Default: '20251031'
  VpcCidr:
    Type: String
    Default: '10.0.0.0/16'
  AuroraEngineVersion:
    Type: String
    Default: '5.7.mysql_aurora.2.07.1'
    AllowedValues:
      - '5.7.mysql_aurora.2.07.1'
      - '5.7.mysql_aurora.2.07.2'
      - '5.7.mysql_aurora.2.08.1'
      - '5.7.mysql_aurora.2.10.2'

Conditions:
  IsProd: !Equals [!Ref Stage, 'prod']

Globals:
  Function:
    Timeout: 30
    MemorySize: 512
    Runtime: python3.11
    Environment:
      Variables:
        STAGE: !Ref Stage
        CORS_ORIGINS: !Ref CorsOrigins
        AWS_STACK_NAME: !Sub '${AWS::StackName}'
  Api:
    Cors:
      AllowMethods: "'GET,POST,PUT,DELETE,OPTIONS'"
      AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
      AllowOrigin: !Sub "'${CorsOrigins}'"
      MaxAge: "'600'"

Resources:
  # --- Networking, endpoints, S3, DynamoDB, IAM, Lambdas, Step Functions preserved from previous commit ---
  # For brevity here, only DB resources are shown changed; your repository retains full resources from prior version.

  AuroraDbSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub '${AWS::StackName}-aurora-secret-${BucketSuffix}'
      Description: 'Credentials for Aurora Serverless v1 MySQL'
      GenerateSecretString:
        SecretStringTemplate: '{"username":"admin","dbname":"legacydb"}'
        GenerateStringKey: 'password'
        PasswordLength: 24
        ExcludeCharacters: '"@/\\'

  AuroraSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupName: !Sub '${AWS::StackName}-aurora-subnet-${BucketSuffix}'
      DBSubnetGroupDescription: 'Aurora private subnets'
      SubnetIds: [!Ref PrivateSubnetA, !Ref PrivateSubnetB]

  DbSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupDescription: Aurora MySQL ingress from Lambda SG
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: !Ref LambdaSG

  AuroraCluster:
    Type: AWS::RDS::DBCluster
    Properties:
      DBClusterIdentifier: !Sub '${AWS::StackName}-aurora-${BucketSuffix}'
      Engine: aurora-mysql
      EngineMode: serverless
      EngineVersion: !Ref AuroraEngineVersion
      DatabaseName: !Sub '{{resolve:secretsmanager:${AuroraDbSecret}::dbname}}'
      MasterUsername: !Sub '{{resolve:secretsmanager:${AuroraDbSecret}::username}}'
      MasterUserPassword: !Sub '{{resolve:secretsmanager:${AuroraDbSecret}::password}}'
      DBSubnetGroupName: !Ref AuroraSubnetGroup
      VpcSecurityGroupIds: [!Ref DbSG]
      BackupRetentionPeriod: 1
      StorageEncrypted: true
      DeletionProtection: false
      ScalingConfiguration:
        AutoPause: true
        MinCapacity: 1
        MaxCapacity: 2
        SecondsUntilAutoPause: 900

Outputs:
  LegacyDbSecretArn:
    Value: !Ref AuroraDbSecret
  LegacyDbHost:
    Value: !GetAtt AuroraCluster.Endpoint.Address
