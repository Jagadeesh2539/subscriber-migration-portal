AWSTemplateFormatVersion: "2010-09-09"
Description: Full Subscriber Migration Portal Infrastructure

Parameters:
  DomainName:
    Type: String
    Description: Optional domain name for the frontend site

Resources:

  # ---------------------------------------------------------------------
  # S3 Bucket for frontend static website
  # ---------------------------------------------------------------------
  FrontendBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "subscriber-portal-${AWS::AccountId}-${AWS::Region}"
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false

  FrontendBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref FrontendBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: PublicReadGetObject
            Effect: Allow
            Principal: "*"
            Action: "s3:GetObject"
            Resource: !Sub "${FrontendBucket.Arn}/*"

  # ---------------------------------------------------------------------
  # DynamoDB tables
  # ---------------------------------------------------------------------
  SubscriberTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "SubscriberTable-${AWS::AccountId}-${AWS::Region}"
      AttributeDefinitions:
        - AttributeName: subscriberId
          AttributeType: S
      KeySchema:
        - AttributeName: subscriberId
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  AuditLogTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "AuditLogTable-${AWS::AccountId}-${AWS::Region}"
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: timestamp
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
        - AttributeName: timestamp
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST

  # ---------------------------------------------------------------------
  # IAM Role for Lambda
  # ---------------------------------------------------------------------
  BackendLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "SubscriberBackendRole-${AWS::AccountId}"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess

  # ---------------------------------------------------------------------
  # Lambda function (placeholder at stack creation)
  # ---------------------------------------------------------------------
  BackendLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "subscriber-backend-${AWS::AccountId}-${AWS::Region}"
      Handler: app.lambda_handler
      Runtime: python3.11
      Role: !GetAtt BackendLambdaRole.Arn
      Code:
        ZipFile: |
          def lambda_handler(event, context):
              return {"statusCode": 200, "body": "Lambda created"}

# ---------------------------------------------------------------------
# Outputs
# ---------------------------------------------------------------------
Outputs:
  FrontendURL:
    Description: URL of the frontend
    Value: !Sub "http://${FrontendBucket}.s3-website.${AWS::Region}.amazonaws.com"

  SubscriberTableName:
    Description: DynamoDB subscriber table
    Value: !Ref SubscriberTable

  AuditLogTableName:
    Description: DynamoDB audit log table
    Value: !Ref AuditLogTable

  BackendLambdaName:
    Description: Name of the backend Lambda
    Value: !Ref BackendLambda
