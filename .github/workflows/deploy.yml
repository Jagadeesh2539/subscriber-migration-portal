name: Deploy Subscriber Migration Portal

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # ---------------------
      # Step 1: Build & Deploy Backend Lambda
      # ---------------------
      - name: Setup Python
        uses: actions/setup-python@v5 # Ensure Python is available for packaging
        with:
          python-version: '3.11' # Matches the Lambda runtime

      - name: Install and Package backend dependencies (THE CRITICAL FIX)
        run: |
          cd backend
          # The -t . flag installs dependencies directly into the current directory
          pip install --no-cache-dir -r requirements.txt -t .
          # Zip the contents, including the newly installed Flask, etc.
          zip -r backend.zip . -x "*.pyc" "__pycache__/*" "*.git*"
          
      - name: Deploy CloudFormation Stack
        run: |
          cd aws
          aws cloudformation deploy \
            --template-file cloudformation.yaml \
            --stack-name subscriber-migration-stack-v3 \
            --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM \
            --parameter-overrides DomainName=${{ secrets.DOMAIN_NAME }}

      # --- ROBUST LAMBDA CODE UPDATE STEPS ---
      # This retrieves the correct, full function name for the update command.
      - name: Get CloudFormation Outputs
        id: cfn_outputs
        run: |
          FUNCTION_NAME=$(aws cloudformation describe-stacks \
            --stack-name subscriber-migration-stack-v3 \
            --query "Stacks[0].Outputs[?OutputKey=='BackendLambdaName'].OutputValue" \
            --output text)
          echo "function_name=$FUNCTION_NAME" >> $GITHUB_OUTPUT

      - name: Update backend Lambda code
        run: |
          aws lambda update-function-code \
            --function-name ${{ steps.cfn_outputs.outputs.function_name }} \
            --zip-file fileb://backend/backend.zip

      # ---------------------
      # Step 2: Build & Deploy Frontend
      # ---------------------
      - name: Install frontend dependencies
        run: |
          cd frontend
          CI=false npm install

      - name: Build frontend
        run: |
          cd frontend
          CI=false npm run build

      - name: Deploy frontend to S3
        run: |
          # This step redeploys the frontend, which is needed to pick up the correct API URL
          aws s3 sync frontend/build/ s3://subscriber-portal-${{ secrets.AWS_ACCOUNT_ID }}-us-east-1 --delete
