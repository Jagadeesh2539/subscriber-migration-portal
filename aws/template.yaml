AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'Subscriber Migration Portal - Production VPC with endpoints, private RDS, secure S3 (Free-tier compliant DB)'

Parameters:
  Stage:
    Type: String
    Default: 'prod'
    AllowedValues: ['dev', 'test', 'prod']
  CorsOrigins:
    Type: String
    Default: 'https://yourdomain.com'
  JwtSecret:
    Type: String
    NoEcho: true
  BucketSuffix:
    Type: String
    Default: '20251031'
    Description: 'Unique suffix for resource names'
  VpcCidr:
    Type: String
    Default: '10.0.0.0/16'
    Description: 'CIDR block for VPC'

Conditions:
  IsProd: !Equals [!Ref Stage, 'prod']

Globals:
  Function:
    Timeout: 30
    MemorySize: 512
    Runtime: python3.11
    Environment:
      Variables:
        STAGE: !Ref Stage
        CORS_ORIGINS: !Ref CorsOrigins
        AWS_STACK_NAME: !Sub '${AWS::StackName}'
  Api:
    Cors:
      AllowMethods: "'GET,POST,PUT,DELETE,OPTIONS'"
      AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
      AllowOrigin: !Sub "'${CorsOrigins}'"
      MaxAge: "'600'"

Resources:
  # VPC, Subnets, Endpoints, SGs, S3, DynamoDB, Lambdas and Step Functions remain as in previous commit...
  # Only LegacyDB section below is modified to be free-tier compatible.

  LegacyDbSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub '${AWS::StackName}-legacy-db-${BucketSuffix}'
      Description: 'Credentials for Legacy RDS MySQL (private)'
      GenerateSecretString:
        SecretStringTemplate: '{"username":"admin","dbname":"legacydb"}'
        GenerateStringKey: 'password'
        PasswordLength: 24
        ExcludeCharacters: '"@/\\'

  LegacyDbSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupName: !Sub '${AWS::StackName}-rds-subnet-${BucketSuffix}'
      DBSubnetGroupDescription: RDS subnet group (private subnets only)
      SubnetIds:
        - !Ref PrivateSubnetA
        - !Ref PrivateSubnetB

  LegacyDB:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: !Sub '${AWS::StackName}-legacy-${BucketSuffix}'
      Engine: mysql
      EngineVersion: '8.0'
      # Free-tier compliant instance class
      DBInstanceClass: 'db.t3.micro'
      AllocatedStorage: 20
      StorageType: gp2
      StorageEncrypted: false
      PubliclyAccessible: false
      MultiAZ: false
      VPCSecurityGroups:
        - !Ref RdsSG
      DBSubnetGroupName: !Ref LegacyDbSubnetGroup
      MasterUsername: !Sub '{{resolve:secretsmanager:${LegacyDbSecret}::username}}'
      MasterUserPassword: !Sub '{{resolve:secretsmanager:${LegacyDbSecret}::password}}'
      DBName: !Sub '{{resolve:secretsmanager:${LegacyDbSecret}::dbname}}'
      BackupRetentionPeriod: 1
      DeletionProtection: false
      EnablePerformanceInsights: false
      MonitoringInterval: 0
    DependsOn:
      - PrivateSubnetARouteTableAssociation
      - PrivateSubnetBRouteTableAssociation

Outputs:
  LegacyDbSecretArn:
    Description: Secret ARN for Legacy RDS credentials
    Value: !Ref LegacyDbSecret
  LegacyDbHost:
    Description: Legacy RDS endpoint hostname (private)
    Value: !GetAtt LegacyDB.Endpoint.Address
